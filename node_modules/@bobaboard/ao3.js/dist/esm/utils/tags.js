import cheerio from "cheerio";
import axios from "axios";
export const getTagUrl = (tagName) => `https://archiveofourown.org/tags/${encodeURI(tagName)
    .replace("/", "*s*")
    .replace("&", "*a*")
    .replace(".", "*d*")}`;
export const getTagPage = async (tagName) => {
    return cheerio.load((await axios.get(getTagUrl(tagName))).data);
};
export const getTagCategory = ($tagPage) => {
    // This will look similar to "This tag belongs to the Character Category."
    const categorySentence = $tagPage($tagPage(".tag.profile > p")[0]).text();
    const category = categorySentence.match(/This tag belongs to the (.+) Category/)[1];
    return category.toLowerCase();
};
export const hasMergers = ($tagPage) => {
    return $tagPage(".merger").length > 0;
};
export const isCommon = ($tagPage) => {
    const categorySentence = $tagPage($tagPage(".tag.profile > p")[0]).text();
    // TODO: check whether my assumption that all tags that have mergers have a parent that's
    // been marked as common.
    return (categorySentence.includes("It's a common tag.") || hasMergers($tagPage));
};
export const isCanonical = ($tagPage) => {
    return isCommon($tagPage) && !hasMergers($tagPage);
};
export const getTagName = ($tagPage) => {
    return $tagPage($tagPage(".tag.profile h2")[0]).text();
};
export const getCanonical = ($tagPage) => {
    if (isCanonical($tagPage)) {
        return getTagName($tagPage);
    }
    if (!hasMergers($tagPage)) {
        return null;
    }
    return $tagPage($tagPage(".merger a.tag")).text();
};
