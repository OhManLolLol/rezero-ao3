import { getCanonical, getTagCategory, getTagPage, isCanonical, isCommon, } from "./utils/tags";
import { getFeedPage, getTagNameFromFeed } from "./utils/feed";
import { getProfile, getProfileBday, getProfileBio, getProfileEmail, getProfileID, getProfileJoined, getProfileLink, getProfileLocation, getProfileName, getProfilePseuds, } from "./utils/user";
import { getTagId, getWorksPage } from "./utils/works";
import axios from "axios";
import { setupCache } from "axios-cache-adapter";
axios.defaults.cache = setupCache({
    maxAge: 15 * 60 * 1000,
});
export const getTag = async ({ tagName, }) => {
    const tagPage = await getTagPage(tagName);
    const worksPage = await getWorksPage(tagName);
    return {
        name: tagName,
        id: getTagId(worksPage),
        category: getTagCategory(tagPage),
        canonical: isCanonical(tagPage),
        common: isCommon(tagPage),
        canonicalName: getCanonical(tagPage),
    };
};
export const getTagNameById = async ({ tagId }) => {
    return getTagNameFromFeed(await getFeedPage({ tagId }));
};
export const getUser = async ({ userName, }) => {
    const profilePage = await getProfile(userName);
    return {
        name: getProfileName(profilePage),
        pseuds: getProfilePseuds(profilePage),
        id: getProfileID(profilePage),
        joined: getProfileJoined(profilePage),
        email: getProfileEmail(profilePage),
        location: getProfileLocation(profilePage),
        birthday: getProfileBday(profilePage),
        url: getProfileLink(userName),
        bioHtml: getProfileBio(profilePage),
    };
};
// TODO: rename this something like "extractWorkDataFromUrl" to make it explicit
// that no network call is involved.
export const getWorkData = ({ url, }) => {
    var _a, _b;
    return {
        workId: url.match(/works\/(\d+)/)[1],
        chapterId: (_a = url.match(/chapters\/(\d+)/)) === null || _a === void 0 ? void 0 : _a[1],
        collectionName: (_b = url.match(/collections\/(\w+)/)) === null || _b === void 0 ? void 0 : _b[1],
    };
};
